#!/bin/bash
#
# ********** DONT RUN THIS UNLESS YOU UNDERSTAND WHAT IT DOES ********
# **********             SERIOUS DAMAGE MAY OCCUR             ********
#
# Publish built $PRODUCTs and their dependencies
#
# $ publish [-b <build_id>] [-t <distservtag>] [product1 [product2 [...]]]
#
# Example:
#    'publish -t current' will publish the build found in $LSSTSW_BUILD_DIR and tag
#    it as 'current' on the distribution server
#

DISTRIBTAG=
BUILD=

set -e
DIR=$(cd "$(dirname "$0")"; pwd)
. "${DIR}/../etc/settings.cfg.sh"

usage() { echo "Usage: $0 [-b <build_id>] [-t <distservtag>] <product1> [product2 [...]]" 1>&2; exit 1; }

while getopts ":b:t:" o; do
    case "$o" in
    b)
        BUILD="$OPTARG"
        ;;
    t)
        DISTRIBTAG="$OPTARG"
        ;;
    *)
        usage
        ;;
    esac
done
shift $((OPTIND-1))

if [[ "$#" = "0" ]]; then
    usage
fi
PRODUCTS=($@)

if [[ -z $BUILD ]]; then
    if [[ ! -z $DISTRIBTAG ]]; then
        # Default the build ID to distserver tag value
        BUILD="$DISTRIBTAG"
        echo "[publish] Build ID defaulting to distserver tag, $BUILD."
    else
        # Find out the build ID
        eval "$(grep -E '^BUILD=' "$LSSTSW_BUILD_DIR"/manifest.txt)"
        echo "[publish] Build ID deduced from manifest.txt, $BUILD."
    fi
fi

#echo DISTRIBTAG=$DISTRIBTAG
#echo BUILD=$BUILD
#echo PRODUCTS=$PRODUCTS

#
# Create the distribution packages
#
for product in "${PRODUCTS[@]}"; do
    eups distrib create "--server-dir=${EUPS_PKGROOT}" -f generic -d eupspkg -t "$BUILD" "$product"
done

#
# Declare the build tag, and declare it $DISTRIBTAG, if set
#
eups distrib declare "--server-dir=${EUPS_PKGROOT}" -t "$BUILD"

if [[ ! -z $DISTRIBTAG && "$DISTRIBTAG" != "$BUILD" ]]; then
    echo "Adding tag '$DISTRIBTAG' at the distribution server."
    sed -r 's|EUPS distribution [^ ]+ version list. Version 1.0|EUPS distribution '"$DISTRIBTAG"' version list. Version 1.0|' \
        "${EUPS_PKGROOT}/tags/${BUILD.list}" > "${EUPS_PKGROOT}/tags/${DISTRIBTAG.list}"
fi

#
# Publish the newinstall script, if declared current
#
if [[ "$DISTRIBTAG" == current ]] && eups list -t "$BUILD" lsst >/dev/null 2>&1; then
    echo "Copying newinstall.sh to the distribution server."
    cp -a "$(eups list -t "$BUILD" -d lsst)/bin/newinstall.sh" "${EUPS_PKGROOT}/"
fi
